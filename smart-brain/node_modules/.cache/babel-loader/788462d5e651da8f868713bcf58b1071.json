{"ast":null,"code":"var _jsxFileName = \"/Users/kylechart/Desktop/Programming/ztmwd-smartbrain/smart-brain/src/Components/SignIn/SignIn.js\";\nimport React from 'react';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    // This is creating the states for the sign in, With out this, it would cause an error and crash\n    super(props);\n\n    this.onEmailChange = event => {\n      this.setState({\n        signInEmail: event.target.value\n      }); // Both of these functions are listening to any updates that occur in the input feilds\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        signInPassword: event.target.value\n      });\n    };\n\n    this.onSubmitSignIn = () => {\n      // This is saying that when the submit button has been pressed, it will run the \n      console.log(this.state); // Route change function, instead of it just running everytime when the button is clicked.\n\n      this.props.onRouteChange('home');\n    };\n\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      onRouteChange\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"mw5 br3 shadow-5 center br3 pa3 pa4-ns mv3 mw6 ba b--black-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"pa4 black-80\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"measure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      id: \"sign_up\",\n      className: \"ba b--transparent ph0 mh0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      className: \"f1 fw6 ph0 mh0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"email-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",\n      type: \"email\",\n      name: \"email-address\",\n      id: \"email-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mv3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\",\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n      onClick: this.state.onSubmitSignIn,\n      type: \"submit\",\n      value: \"Sign in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lh-copy mt3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => {\n        onRouteChange('register');\n      },\n      className: \"f6 pointer link dim black db\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }\n    }, \"Register\")))));\n  }\n\n}\n\nexport default SignIn; // By adding an arrow function into the onClick, it allows us to make it so the route change is only ran when the onclick happens! SO when the button\n// Has been clicked, it will run the route change function.","map":{"version":3,"sources":["/Users/kylechart/Desktop/Programming/ztmwd-smartbrain/smart-brain/src/Components/SignIn/SignIn.js"],"names":["React","SignIn","Component","constructor","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","console","log","state","onRouteChange","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nclass SignIn extends React.Component {\t\n\tconstructor(props) {\t\t\t// This is creating the states for the sign in, With out this, it would cause an error and crash\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: '',\n\t\t}\n\t}\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail: event.target.value}) \t\t// Both of these functions are listening to any updates that occur in the input feilds\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Of their respective properties \n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword: event.target.value})\n\t}\n\tonSubmitSignIn = () => {\t\t\t\t\t\t\t\t\t// This is saying that when the submit button has been pressed, it will run the \n\t\tconsole.log(this.state)\t\t\t\t\t\t\t\t\t// Route change function, instead of it just running everytime when the button is clicked.\n\t\tthis.props.onRouteChange('home')\n\t}\n\trender() {\n\t\tconst { onRouteChange } = this.props\n\t\treturn (\n\t\t<article className='mw5 br3 shadow-5 center br3 pa3 pa4-ns mv3 mw6 ba b--black-10'>\n\t\t\t<main className='pa4 black-80'>\n\t\t\t  <div className='measure'>\n\t\t\t    <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n\t\t\t      <legend className='f1 fw6 ph0 mh0'>Sign In</legend>\n\t\t\t      <div className='mt3'>\n\t\t\t        <label className='db fw6 lh-copy f6' htmlFor='email-address'>Email</label>\n\t\t\t        <input className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='email' name='email-address'  id='email-address' />\n\t\t\t      </div>\n\t\t\t      <div className='mv3'>\n\t\t\t        <label className='db fw6 lh-copy f6' htmlFor='password'>Password</label>\n\t\t\t        <input className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100' type='password' name='password'  id='password' />\n\t\t\t      </div>\n\t\t\t    </fieldset>\n\t\t\t    <div className=''>\n\t\t\t      <input  className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' onClick={this.state.onSubmitSignIn} type='submit' value='Sign in' />\n\t\t\t    </div>\n\t\t\t    <div className='lh-copy mt3'>\n\t\t\t      <p onClick={() => { onRouteChange('register')}} className='f6 pointer link dim black db'>Register</p>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</main>\n\t\t</article>\n\t)}\n}\n\nexport default SignIn;\n\n\n// By adding an arrow function into the onClick, it allows us to make it so the route change is only ran when the onclick happens! SO when the button\n// Has been clicked, it will run the route change function."]},"metadata":{},"sourceType":"module"}